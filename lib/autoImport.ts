// autoImport.ts
// This file was generated by ts-java.
/// <reference path='java.d.ts' />

import java = require('redseal-java');

export = autoImport;

interface Dictionary {
  [index: string]: string;
}

function autoImport(shortName: "AbstractList"): Java.java.util.AbstractList.Static;
function autoImport(shortName: "AbstractCollection"): Java.java.util.AbstractCollection.Static;
function autoImport(shortName: "AbstractSet"): Java.java.util.AbstractSet.Static;
function autoImport(shortName: "Predicate"): Java.java.util.function_.Predicate.Static;
function autoImport(shortName: "ReferenceBundle"): Java.org.codehaus.groovy.util.ReferenceBundle.Static;
function autoImport(shortName: "Supplier"): Java.java.util.function_.Supplier.Static;
function autoImport(shortName: "Set"): Java.java.util.Set.Static;
function autoImport(shortName: "GroovyObjectSupport"): Java.groovy.lang.GroovyObjectSupport.Static;
function autoImport(shortName: "Class"): Java.java.lang.Class.Static;
function autoImport(shortName: "Charset"): Java.java.nio.charset.Charset.Static;
function autoImport(shortName: "GraphSONWriter$Builder"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONWriter$Builder.Static;
function autoImport(shortName: "Binding"): Java.groovy.lang.Binding.Static;
function autoImport(shortName: "VertexProgram"): Java.com.tinkerpop.gremlin.process.computer.VertexProgram.Static;
function autoImport(shortName: "ScriptEngineLambda"): Java.com.tinkerpop.gremlin.process.computer.util.ScriptEngineLambda.Static;
function autoImport(shortName: "Double"): Java.java.lang.Double.Static;
function autoImport(shortName: "String"): Java.java.lang.String.Static;
function autoImport(shortName: "CompilerConfiguration"): Java.org.codehaus.groovy.control.CompilerConfiguration.Static;
function autoImport(shortName: "MetaMethod"): Java.groovy.lang.MetaMethod.Static;
function autoImport(shortName: "Iterable"): Java.java.lang.Iterable.Static;
function autoImport(shortName: "Traversal"): Java.com.tinkerpop.gremlin.process.Traversal.Static;
function autoImport(shortName: "MapReduce"): Java.com.tinkerpop.gremlin.process.computer.MapReduce.Static;
function autoImport(shortName: "CompiledScript"): Java.javax.script.CompiledScript.Static;
function autoImport(shortName: "Element"): Java.com.tinkerpop.gremlin.structure.Element.Static;
function autoImport(shortName: "Float"): Java.java.lang.Float.Static;
function autoImport(shortName: "__"): Java.com.tinkerpop.gremlin.process.graph.traversal.__.Static;
function autoImport(shortName: "Short"): Java.java.lang.Short.Static;
function autoImport(shortName: "Property"): Java.com.tinkerpop.gremlin.structure.Property.Static;
function autoImport(shortName: "Map$Entry"): Java.java.util.Map$Entry.Static;
function autoImport(shortName: "Integer"): Java.java.lang.Integer.Static;
function autoImport(shortName: "Transaction"): Java.com.tinkerpop.gremlin.structure.Transaction.Static;
function autoImport(shortName: "MetaBeanProperty"): Java.groovy.lang.MetaBeanProperty.Static;
function autoImport(shortName: "Reference"): Java.groovy.lang.Reference.Static;
function autoImport(shortName: "Direction"): Java.com.tinkerpop.gremlin.structure.Direction.Static;
function autoImport(shortName: "ListIterator"): Java.java.util.ListIterator.Static;
function autoImport(shortName: "StandardCharsets"): Java.java.nio.charset.StandardCharsets.Static;
function autoImport(shortName: "Consumer"): Java.java.util.function_.Consumer.Static;
function autoImport(shortName: "VertexProperty"): Java.com.tinkerpop.gremlin.structure.VertexProperty.Static;
function autoImport(shortName: "GraphSONWriter"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONWriter.Static;
function autoImport(shortName: "IntRange"): Java.groovy.lang.IntRange.Static;
function autoImport(shortName: "Iterator"): Java.java.util.Iterator.Static;
function autoImport(shortName: "ClassNode"): Java.org.codehaus.groovy.ast.ClassNode.Static;
function autoImport(shortName: "Function"): Java.java.util.function_.Function.Static;
function autoImport(shortName: "GraphComputer"): Java.com.tinkerpop.gremlin.process.computer.GraphComputer.Static;
function autoImport(shortName: "HashMap"): Java.java.util.HashMap.Static;
function autoImport(shortName: "GroovyResourceLoader"): Java.groovy.lang.GroovyResourceLoader.Static;
function autoImport(shortName: "Long"): Java.java.lang.Long.Static;
function autoImport(shortName: "DelegatingMetaClass"): Java.groovy.lang.DelegatingMetaClass.Static;
function autoImport(shortName: "Compare"): Java.com.tinkerpop.gremlin.structure.Compare.Static;
function autoImport(shortName: "Edge"): Java.com.tinkerpop.gremlin.structure.Edge.Static;
function autoImport(shortName: "GraphSONMapper$Builder"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONMapper$Builder.Static;
function autoImport(shortName: "ScriptEngineFactory"): Java.javax.script.ScriptEngineFactory.Static;
function autoImport(shortName: "FileInputStream"): Java.java.io.FileInputStream.Static;
function autoImport(shortName: "MetaClass"): Java.groovy.lang.MetaClass.Static;
function autoImport(shortName: "Object"): Java.java.lang.Object.Static;
function autoImport(shortName: "BiConsumer"): Java.java.util.function_.BiConsumer.Static;
function autoImport(shortName: "Boolean"): Java.java.lang.Boolean.Static;
function autoImport(shortName: "GraphSONReader$Builder"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONReader$Builder.Static;
function autoImport(shortName: "IdentityGlobFunction"): Java.co.redseal.gremlinnode.function_.IdentityGlobFunction.Static;
function autoImport(shortName: "Groovysh"): Java.org.codehaus.groovy.tools.shell.Groovysh.Static;
function autoImport(shortName: "HashSet"): Java.java.util.HashSet.Static;
function autoImport(shortName: "Array"): Java.java.lang.reflect.Array.Static;
function autoImport(shortName: "StrategyGraph"): Java.com.tinkerpop.gremlin.structure.strategy.StrategyGraph.Static;
function autoImport(shortName: "Enum"): Java.java.lang.Enum.Static;
function autoImport(shortName: "StrategyContext"): Java.com.tinkerpop.gremlin.structure.strategy.StrategyContext.Static;
function autoImport(shortName: "BiFunction"): Java.java.util.function_.BiFunction.Static;
function autoImport(shortName: "ByteArrayOutputStream"): Java.java.io.ByteArrayOutputStream.Static;
function autoImport(shortName: "GroovyCodeSource"): Java.groovy.lang.GroovyCodeSource.Static;
function autoImport(shortName: "Comparator"): Java.java.util.Comparator.Static;
function autoImport(shortName: "GlobFunction"): Java.co.redseal.gremlinnode.function_.GlobFunction.Static;
function autoImport(shortName: "ArrayList"): Java.java.util.ArrayList.Static;
function autoImport(shortName: "CompilationCustomizer"): Java.org.codehaus.groovy.control.customizers.CompilationCustomizer.Static;
function autoImport(shortName: "ClassLoader"): Java.java.lang.ClassLoader.Static;
function autoImport(shortName: "TestClass"): Java.co.redseal.gremlinnode.testing.TestClass.Static;
function autoImport(shortName: "GraphTraversal"): Java.com.tinkerpop.gremlin.process.graph.traversal.GraphTraversal.Static;
function autoImport(shortName: "ManagedReference"): Java.org.codehaus.groovy.util.ManagedReference.Static;
function autoImport(shortName: "AbstractGlobFunction"): Java.co.redseal.gremlinnode.function_.AbstractGlobFunction.Static;
function autoImport(shortName: "Vertex"): Java.com.tinkerpop.gremlin.structure.Vertex.Static;
function autoImport(shortName: "NegateGlobFunction"): Java.co.redseal.gremlinnode.function_.NegateGlobFunction.Static;
function autoImport(shortName: "TinkerFactory"): Java.com.tinkerpop.gremlin.tinkergraph.structure.TinkerFactory.Static;
function autoImport(shortName: "ScriptEngine"): Java.javax.script.ScriptEngine.Static;
function autoImport(shortName: "Bindings"): Java.javax.script.Bindings.Static;
function autoImport(shortName: "FileOutputStream"): Java.java.io.FileOutputStream.Static;
function autoImport(shortName: "ScriptContext"): Java.javax.script.ScriptContext.Static;
function autoImport(shortName: "AbstractMap"): Java.java.util.AbstractMap.Static;
function autoImport(shortName: "GraphStrategy"): Java.com.tinkerpop.gremlin.structure.strategy.GraphStrategy.Static;
function autoImport(shortName: "MetaProperty"): Java.groovy.lang.MetaProperty.Static;
function autoImport(shortName: "Graph"): Java.com.tinkerpop.gremlin.structure.Graph.Static;
function autoImport(shortName: "BiPredicate"): Java.java.util.function_.BiPredicate.Static;
function autoImport(shortName: "AbstractScriptEngine"): Java.javax.script.AbstractScriptEngine.Static;
function autoImport(shortName: "Order"): Java.com.tinkerpop.gremlin.structure.Order.Static;
function autoImport(shortName: "GraphSONMapper"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONMapper.Static;
function autoImport(shortName: "NoSuchElementException"): Java.java.util.NoSuchElementException.Static;
function autoImport(shortName: "BinaryOperator"): Java.java.util.function_.BinaryOperator.Static;
function autoImport(shortName: "GroovyLambda"): Java.co.redseal.gremlinnode.function_.GroovyLambda.Static;
function autoImport(shortName: "Closure"): Java.groovy.lang.Closure.Static;
function autoImport(shortName: "NullObject"): Java.org.codehaus.groovy.runtime.NullObject.Static;
function autoImport(shortName: "Scope"): Java.com.tinkerpop.gremlin.process.Scope.Static;
function autoImport(shortName: "BulkSet"): Java.com.tinkerpop.gremlin.process.util.BulkSet.Static;
function autoImport(shortName: "T"): Java.com.tinkerpop.gremlin.process.T.Static;
function autoImport(shortName: "GremlinGroovyScriptEngine"): Java.com.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine.Static;
function autoImport(shortName: "TinkerGraph"): Java.com.tinkerpop.gremlin.tinkergraph.structure.TinkerGraph.Static;
function autoImport(shortName: "Map"): Java.java.util.Map.Static;
function autoImport(shortName: "GroovyClassLoader"): Java.groovy.lang.GroovyClassLoader.Static;
function autoImport(shortName: "UnaryOperator"): Java.java.util.function_.UnaryOperator.Static;
function autoImport(shortName: "Range"): Java.groovy.lang.Range.Static;
function autoImport(shortName: "GraphSONReader"): Java.com.tinkerpop.gremlin.structure.io.graphson.GraphSONReader.Static;
function autoImport(shortName: "Collection"): Java.java.util.Collection.Static;
function autoImport(shortName: "List"): Java.java.util.List.Static;
function autoImport(shortName: "AndThenGlobFunction"): Java.co.redseal.gremlinnode.function_.AndThenGlobFunction.Static;
function autoImport(shortName: "TriConsumer"): Java.com.tinkerpop.gremlin.util.function_.TriConsumer.Static;
function autoImport(shortName: string): any;

function autoImport(shortName: string): any {

  var shortToLongNameMap: Dictionary = {
    "AbstractList": "java.util.AbstractList",
    "AbstractCollection": "java.util.AbstractCollection",
    "AbstractSet": "java.util.AbstractSet",
    "Predicate": "java.util.function_.Predicate",
    "ReferenceBundle": "org.codehaus.groovy.util.ReferenceBundle",
    "Supplier": "java.util.function_.Supplier",
    "Set": "java.util.Set",
    "GroovyObjectSupport": "groovy.lang.GroovyObjectSupport",
    "Class": "java.lang.Class",
    "Charset": "java.nio.charset.Charset",
    "GraphSONWriter$Builder": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONWriter$Builder",
    "Binding": "groovy.lang.Binding",
    "VertexProgram": "com.tinkerpop.gremlin.process.computer.VertexProgram",
    "ScriptEngineLambda": "com.tinkerpop.gremlin.process.computer.util.ScriptEngineLambda",
    "Double": "java.lang.Double",
    "String": "java.lang.String",
    "CompilerConfiguration": "org.codehaus.groovy.control.CompilerConfiguration",
    "MetaMethod": "groovy.lang.MetaMethod",
    "Iterable": "java.lang.Iterable",
    "Traversal": "com.tinkerpop.gremlin.process.Traversal",
    "MapReduce": "com.tinkerpop.gremlin.process.computer.MapReduce",
    "CompiledScript": "javax.script.CompiledScript",
    "Element": "com.tinkerpop.gremlin.structure.Element",
    "Float": "java.lang.Float",
    "__": "com.tinkerpop.gremlin.process.graph.traversal.__",
    "Short": "java.lang.Short",
    "Property": "com.tinkerpop.gremlin.structure.Property",
    "Map$Entry": "java.util.Map$Entry",
    "Integer": "java.lang.Integer",
    "Transaction": "com.tinkerpop.gremlin.structure.Transaction",
    "MetaBeanProperty": "groovy.lang.MetaBeanProperty",
    "Reference": "groovy.lang.Reference",
    "Direction": "com.tinkerpop.gremlin.structure.Direction",
    "ListIterator": "java.util.ListIterator",
    "StandardCharsets": "java.nio.charset.StandardCharsets",
    "Consumer": "java.util.function_.Consumer",
    "VertexProperty": "com.tinkerpop.gremlin.structure.VertexProperty",
    "GraphSONWriter": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONWriter",
    "IntRange": "groovy.lang.IntRange",
    "Iterator": "java.util.Iterator",
    "ClassNode": "org.codehaus.groovy.ast.ClassNode",
    "Function": "java.util.function_.Function",
    "GraphComputer": "com.tinkerpop.gremlin.process.computer.GraphComputer",
    "HashMap": "java.util.HashMap",
    "GroovyResourceLoader": "groovy.lang.GroovyResourceLoader",
    "Long": "java.lang.Long",
    "DelegatingMetaClass": "groovy.lang.DelegatingMetaClass",
    "Compare": "com.tinkerpop.gremlin.structure.Compare",
    "Edge": "com.tinkerpop.gremlin.structure.Edge",
    "GraphSONMapper$Builder": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONMapper$Builder",
    "ScriptEngineFactory": "javax.script.ScriptEngineFactory",
    "FileInputStream": "java.io.FileInputStream",
    "MetaClass": "groovy.lang.MetaClass",
    "Object": "java.lang.Object",
    "BiConsumer": "java.util.function_.BiConsumer",
    "Boolean": "java.lang.Boolean",
    "GraphSONReader$Builder": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONReader$Builder",
    "IdentityGlobFunction": "co.redseal.gremlinnode.function_.IdentityGlobFunction",
    "Groovysh": "org.codehaus.groovy.tools.shell.Groovysh",
    "HashSet": "java.util.HashSet",
    "Array": "java.lang.reflect.Array",
    "StrategyGraph": "com.tinkerpop.gremlin.structure.strategy.StrategyGraph",
    "Enum": "java.lang.Enum",
    "StrategyContext": "com.tinkerpop.gremlin.structure.strategy.StrategyContext",
    "BiFunction": "java.util.function_.BiFunction",
    "ByteArrayOutputStream": "java.io.ByteArrayOutputStream",
    "GroovyCodeSource": "groovy.lang.GroovyCodeSource",
    "Comparator": "java.util.Comparator",
    "GlobFunction": "co.redseal.gremlinnode.function_.GlobFunction",
    "ArrayList": "java.util.ArrayList",
    "CompilationCustomizer": "org.codehaus.groovy.control.customizers.CompilationCustomizer",
    "ClassLoader": "java.lang.ClassLoader",
    "TestClass": "co.redseal.gremlinnode.testing.TestClass",
    "GraphTraversal": "com.tinkerpop.gremlin.process.graph.traversal.GraphTraversal",
    "ManagedReference": "org.codehaus.groovy.util.ManagedReference",
    "AbstractGlobFunction": "co.redseal.gremlinnode.function_.AbstractGlobFunction",
    "Vertex": "com.tinkerpop.gremlin.structure.Vertex",
    "NegateGlobFunction": "co.redseal.gremlinnode.function_.NegateGlobFunction",
    "TinkerFactory": "com.tinkerpop.gremlin.tinkergraph.structure.TinkerFactory",
    "ScriptEngine": "javax.script.ScriptEngine",
    "Bindings": "javax.script.Bindings",
    "FileOutputStream": "java.io.FileOutputStream",
    "ScriptContext": "javax.script.ScriptContext",
    "AbstractMap": "java.util.AbstractMap",
    "GraphStrategy": "com.tinkerpop.gremlin.structure.strategy.GraphStrategy",
    "MetaProperty": "groovy.lang.MetaProperty",
    "Graph": "com.tinkerpop.gremlin.structure.Graph",
    "BiPredicate": "java.util.function_.BiPredicate",
    "AbstractScriptEngine": "javax.script.AbstractScriptEngine",
    "Order": "com.tinkerpop.gremlin.structure.Order",
    "GraphSONMapper": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONMapper",
    "NoSuchElementException": "java.util.NoSuchElementException",
    "BinaryOperator": "java.util.function_.BinaryOperator",
    "GroovyLambda": "co.redseal.gremlinnode.function_.GroovyLambda",
    "Closure": "groovy.lang.Closure",
    "NullObject": "org.codehaus.groovy.runtime.NullObject",
    "Scope": "com.tinkerpop.gremlin.process.Scope",
    "BulkSet": "com.tinkerpop.gremlin.process.util.BulkSet",
    "T": "com.tinkerpop.gremlin.process.T",
    "GremlinGroovyScriptEngine": "com.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine",
    "TinkerGraph": "com.tinkerpop.gremlin.tinkergraph.structure.TinkerGraph",
    "Map": "java.util.Map",
    "GroovyClassLoader": "groovy.lang.GroovyClassLoader",
    "UnaryOperator": "java.util.function_.UnaryOperator",
    "Range": "groovy.lang.Range",
    "GraphSONReader": "com.tinkerpop.gremlin.structure.io.graphson.GraphSONReader",
    "Collection": "java.util.Collection",
    "List": "java.util.List",
    "AndThenGlobFunction": "co.redseal.gremlinnode.function_.AndThenGlobFunction",
    "TriConsumer": "com.tinkerpop.gremlin.util.function_.TriConsumer",
  };
  
  if (shortName in shortToLongNameMap) {
    return java.import(shortToLongNameMap[shortName]);
  } else {
    throw new Error('autoImport unable to import short name:' + shortName);
  }
}